
package org.altaprise.vawr.ui;

import java.awt.Dimension;

import java.awt.Toolkit;

import java.util.ArrayList;

import org.altaprise.vawr.awrdata.AWRMetric;
import org.altaprise.vawr.awrdata.AWRMetrics;

/**
 *
 * @author sfurlong
 */
public class MetricsDescriptionDialog extends javax.swing.JDialog {

    /** Creates new form MetricsDescriptionDialog */
    public MetricsDescriptionDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        populateMetricDescriptions();
        this.centerDialog();        
    }

    private void populateMetricDescriptions() {
        String htmlString = "";
        
        ArrayList<AWRMetric> metricDetails = AWRMetrics.getMetricDetails();
        htmlString += "<style type=\'text/css\'> td{font-family:Arial; color:blue; font-size:11pt;} th{font-family:Arial; color:black; font-size:12pt;} </style> ";
        htmlString += "<center><h1>Explanation of AWR Metrics*</h1></center>\n";
        htmlString += "<table border=\"1\" font size=\"1\">\n";
        htmlString += "<tr>";
        htmlString += "<th>Oracle AWR Metric ID*</th><th>Oracle AWR Metric Name*</th><th>AWR Metric Unit*</th><th>AWRMiner Metric Name</th><th>ChartTitle</th>";
        htmlString += "</tr>";
        
        for (int i=0; i<metricDetails.size(); i++) {
    //            htmlString += "<tr bgcolor=\"#99FF99\">\n";
            htmlString += "<tr>\n";
            htmlString += "<td>\n";
            htmlString += metricDetails.get(i).getAwrOracleMetricId();
            htmlString += "</td>\n";
            htmlString += "<td>\n";
            htmlString += metricDetails.get(i).getAWROracleMetricName();
            htmlString += "</td>\n";
            htmlString += "<td>\n";
            htmlString += metricDetails.get(i).getAWROracleMetricUnit();
            htmlString += "</td>\n";
            htmlString += "<td>\n";
            htmlString += metricDetails.get(i).getAWRMinerMetricName();
            htmlString += "</td>\n";
            htmlString += "<td>\n";
            htmlString += metricDetails.get(i).getMetricChartTitle();
            htmlString += "</td>\n";
            htmlString += "</tr>\n";
        }
        htmlString += "</table>\n";
        //htmlString += "<style type=\'text/css\'> font-family:Arial; color:black; font-size:11pt; </style> ";
        htmlString += "<br>";
        htmlString += "*These metric attributes are defined in Oracle system view V$METRICNAME<br>";
        htmlString += "For more info, see http://docs.oracle.com/cd/E16655_01/server.121/e17615/refrn30336.htm#REFRN30336";
        
        _metricDescGrid.setContentType("text/html");
        _metricDescGrid.setText(htmlString);
        _metricDescGrid.setCaretPosition(1);
        _metricDescGrid.setEditable(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jScrollPane1 = new javax.swing.JScrollPane();
        _metricDescGrid = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Visual AWR");
        setName("Visual AWR"); // NOI18N
        setPreferredSize(new java.awt.Dimension(800, 500));

        jScrollPane1.setViewportView(_metricDescGrid);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE)
        );

        pack();
    }//GEN-END:initComponents

    private void centerDialog() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = this.getSize();
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        this.setLocation(screenSize.width/2 - frameSize.width/2,
                          screenSize.height/2 - frameSize.height/2);

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MetricsDescriptionDialog.class.getName()).log(java.util.logging.Level.SEVERE,
                                                                                             null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MetricsDescriptionDialog.class.getName()).log(java.util.logging.Level.SEVERE,
                                                                                             null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MetricsDescriptionDialog.class.getName()).log(java.util.logging.Level.SEVERE,
                                                                                             null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MetricsDescriptionDialog.class.getName()).log(java.util.logging.Level.SEVERE,
                                                                                             null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MetricsDescriptionDialog dialog = new MetricsDescriptionDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane _metricDescGrid;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
